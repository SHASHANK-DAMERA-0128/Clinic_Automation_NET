@model Clinic_Automation.Models.Appointment

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Appointment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AppointmentID)

        <div class="form-group visually-hidden">
            @Html.LabelFor(model => model.PatientID, "PatientID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PatientID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PatientID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group visually-hidden">
            @Html.LabelFor(model => model.PhysicianID, "PhysicianID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PhysicianID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PhysicianID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group visually-hidden">
            @Html.LabelFor(model => model.AppointmentDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppointmentDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AppointmentDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group visually-hidden">
            @Html.LabelFor(model => model.Criticality, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Criticality, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Criticality, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group visually-hidden">
            @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group visually-hidden">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">

                @Html.LabelFor(model => model.ScheduleStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{
                        var status = new List<string> { "APPROVED", "REJECTED" };
                    }
                    @Html.DropDownListFor(model => model.ScheduleStatus, new SelectList(status), "PENDING", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ScheduleStatus, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.ScheduleStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="segmented-control">
                    <label class="segmented-control-option">
                        @Html.RadioButtonFor(model => model.ScheduleStatus, "PENDING", new { @class = "form-check-input" })
                        Pending
                    </label>
                    <label class="segmented-control-option">
                        @Html.RadioButtonFor(model => model.ScheduleStatus, "APPROVED", new { @class = "form-check-input" })
                        Approved
                    </label>
                    <label class="segmented-control-option">
                        @Html.RadioButtonFor(model => model.ScheduleStatus, "REJECTED", new { @class = "form-check-input" })
                        Rejected
                    </label>
                </div>
                @Html.ValidationMessageFor(model => model.ScheduleStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mt-4">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input id="btnSavePO" type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
}

<div class="d-flex justify-content-start w-100">
    <a href="@Url.Action("DisplayAdminAppointment", "Admin")" class="btn btn-outline-dark text-decoration-none mt-3">← Back to List</a>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}