@model Clinic_Automation.Models.Appointment

@{
    ViewBag.Title = "Create Appointment";
}

<div class="container">
    <div class="row justify-content-center align-items-center" style="height: 100vh;">
        <div class="col-md-6">
            <div class="card bg-light">
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <h4 class="card-title text-center">📋 Appointment</h4>
                        <hr />

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="mb-3">
                            @Html.LabelFor(model => model.PhysicianID, "Physician Name", htmlAttributes: new { @class = "form-label" })
                            @Html.DropDownListFor(model => model.PhysicianID, ViewBag.PhysicianID as SelectList, "Select Physician", htmlAttributes: new { @class = "form-select" })
                            @Html.ValidationMessageFor(model => model.PhysicianID, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.AppointmentDateTime, "Appointment Date and Time", htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.AppointmentDateTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AppointmentDateTime, "", new { @class = "text-danger" })
                            @Html.ValidationMessage("PhysicianFree", new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Criticality, "Criticality", htmlAttributes: new { @class = "form-label" })
                            @Html.DropDownListFor(model => model.Criticality, ViewBag.CriticalityList as SelectList, "Select Criticality", htmlAttributes: new { @class = "form-select" }) <!-- Use DropDownListFor -->
                            @Html.ValidationMessageFor(model => model.Criticality, "", new { @class = "text-danger" })
                        </div>
                        @*<div class="mb-3">
                                @Html.LabelFor(model => model.Criticality, "Criticality", htmlAttributes: new { @class = "form-label" })
                                @Html.DropDownList("CriticalityList", ViewBag.CriticalityList as SelectList, "Select Criticality", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Criticality, "", new { @class = "text-danger" })
                            </div>*@

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Reason, "Reason", htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Note, "Note", htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                        </div>

                        <div class="row justify-content-center mt-3">
                            <div class="col-md-6">
                                <button type="submit" class="btn btn-primary w-100 mb-2">Create Appointment</button>
                                <a href="@Url.Action("Index","Patient")" class="btn btn-outline-danger w-100">Cancel</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>


</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
