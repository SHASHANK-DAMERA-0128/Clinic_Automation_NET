<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Drug.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhysicianAdvice.Advise)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Drug.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhysicianAdvice.Advise)
            </td>
            <td>
                @Html.ActionLink("Edit", "EditPhysicianPrescription", new { id = item.PhysicianPrescriptionID }) |
                @*@Html.ActionLink("Details", "DetailsPhysicianPrescription", new { id = item.PhysicianPrescriptionID }) |
                @Html.ActionLink("Delete", "DeletePhysicianPrescription", new { id = item.PhysicianPrescriptionID })
            </td>*@
        </tr>
    }

</table>


@model Clinic_Automation.Models.Patient

@{
    ViewBag.Title = "Create Your Account";
}

<head>
    <link href="~/Content/styles/Home.css" rel="stylesheet" />
</head>

<main class="min-vh-100">

    <div class="w-75 mx-auto">
        <div class="d-flex justify-content-center align-items-center w-100">
            <img src="~/Content/img/medicalcare.svg" class="doctor" alt="Medical Care" />
        </div>

        <div class="d-flex justify-content-center align-items-center w-100 flex-column" style="align-items: baseline;">
            <div class="text-center d-flex align-items-baseline mb-1">
                <p class="mb-0">Hi, Welcome to&nbsp;</p>
                <span class="brand-logo">
                    Desi Care
                </span>
            </div>
            <span class="brand-tagline">
                Where even our <span class="chai-text">chai</span> is <span class="prescribed-text">prescribed</span> with <span class="text-danger">love!💖🥰</span>
            </span>
        </div>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="d-flex flex-wrap align-content-center flex-column mt-2">
                <h4></h4>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="signup-form-box">
                    @Html.LabelFor(model => model.PatientName, htmlAttributes: new { @class = "control-label signup-label" })
                    <div class="">
                        @Html.EditorFor(model => model.PatientName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PatientName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="signup-form-box">
                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label signup-label" })
                    <div class="">
                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="signup-form-box">
                    @Html.LabelFor(model => model.PatientNumber, htmlAttributes: new { @class = "control-label signup-label" })
                    <div class="">
                        @Html.EditorFor(model => model.PatientNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PatientNumber, "", new { @class = "text-danger" })
                        @Html.ValidationMessage("PhoneNumberExists", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="signup-form-box">
                    @Html.LabelFor(model => model.PatientEmail, htmlAttributes: new { @class = "control-label signup-label" })
                    <div class="">
                        @Html.EditorFor(model => model.PatientEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PatientEmail, "", new { @class = "text-danger" })
                        @Html.ValidationMessage("EmailExists", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="signup-form-box">
                    @Html.LabelFor(model => model.PatientAddress, htmlAttributes: new { @class = "control-label signup-label" })
                    <div class="">
                        @Html.EditorFor(model => model.PatientAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PatientAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="signup-form-box">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label signup-label" })
                    <div class="">
                        @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="signup-form-box">
                    @Html.LabelFor(model => model.PatientSummary, htmlAttributes: new { @class = "control-label signup-label" })
                    <div class="">
                        @Html.EditorFor(model => model.PatientSummary, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PatientSummary, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="signup-form-box">
                    <div class="col-md-offset-2 ">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

    </div>
</main>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
